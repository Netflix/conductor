// Code generated by protoc-gen-go. DO NOT EDIT.
// source: model/workflowtask.proto

package model // import "github.com/netflix/conductor/client/gogrpc/conductor/model"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _struct "github.com/golang/protobuf/ptypes/struct"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type WorkflowTask struct {
	Name                           string                                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TaskReferenceName              string                                    `protobuf:"bytes,2,opt,name=task_reference_name,json=taskReferenceName,proto3" json:"task_reference_name,omitempty"`
	Description                    string                                    `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	InputParameters                map[string]*_struct.Value                 `protobuf:"bytes,4,rep,name=input_parameters,json=inputParameters,proto3" json:"input_parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Type                           string                                    `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	DynamicTaskNameParam           string                                    `protobuf:"bytes,6,opt,name=dynamic_task_name_param,json=dynamicTaskNameParam,proto3" json:"dynamic_task_name_param,omitempty"`
	CaseValueParam                 string                                    `protobuf:"bytes,7,opt,name=case_value_param,json=caseValueParam,proto3" json:"case_value_param,omitempty"`
	CaseExpression                 string                                    `protobuf:"bytes,8,opt,name=case_expression,json=caseExpression,proto3" json:"case_expression,omitempty"`
	ScriptExpression               string                                    `protobuf:"bytes,22,opt,name=script_expression,json=scriptExpression,proto3" json:"script_expression,omitempty"`
	DecisionCases                  map[string]*WorkflowTask_WorkflowTaskList `protobuf:"bytes,9,rep,name=decision_cases,json=decisionCases,proto3" json:"decision_cases,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DynamicForkTasksParam          string                                    `protobuf:"bytes,10,opt,name=dynamic_fork_tasks_param,json=dynamicForkTasksParam,proto3" json:"dynamic_fork_tasks_param,omitempty"`
	DynamicForkTasksInputParamName string                                    `protobuf:"bytes,11,opt,name=dynamic_fork_tasks_input_param_name,json=dynamicForkTasksInputParamName,proto3" json:"dynamic_fork_tasks_input_param_name,omitempty"`
	DefaultCase                    []*WorkflowTask                           `protobuf:"bytes,12,rep,name=default_case,json=defaultCase,proto3" json:"default_case,omitempty"`
	ForkTasks                      []*WorkflowTask_WorkflowTaskList          `protobuf:"bytes,13,rep,name=fork_tasks,json=forkTasks,proto3" json:"fork_tasks,omitempty"`
	StartDelay                     int32                                     `protobuf:"varint,14,opt,name=start_delay,json=startDelay,proto3" json:"start_delay,omitempty"`
	SubWorkflowParam               *SubWorkflowParams                        `protobuf:"bytes,15,opt,name=sub_workflow_param,json=subWorkflowParam,proto3" json:"sub_workflow_param,omitempty"`
	JoinOn                         []string                                  `protobuf:"bytes,16,rep,name=join_on,json=joinOn,proto3" json:"join_on,omitempty"`
	Sink                           string                                    `protobuf:"bytes,17,opt,name=sink,proto3" json:"sink,omitempty"`
	Optional                       bool                                      `protobuf:"varint,18,opt,name=optional,proto3" json:"optional,omitempty"`
	TaskDefinition                 *TaskDef                                  `protobuf:"bytes,19,opt,name=task_definition,json=taskDefinition,proto3" json:"task_definition,omitempty"`
	RateLimited                    bool                                      `protobuf:"varint,20,opt,name=rate_limited,json=rateLimited,proto3" json:"rate_limited,omitempty"`
	DefaultExclusiveJoinTask       []string                                  `protobuf:"bytes,21,rep,name=default_exclusive_join_task,json=defaultExclusiveJoinTask,proto3" json:"default_exclusive_join_task,omitempty"`
	AsyncComplete                  bool                                      `protobuf:"varint,23,opt,name=async_complete,json=asyncComplete,proto3" json:"async_complete,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}                                  `json:"-"`
	XXX_unrecognized               []byte                                    `json:"-"`
	XXX_sizecache                  int32                                     `json:"-"`
}

func (m *WorkflowTask) Reset()         { *m = WorkflowTask{} }
func (m *WorkflowTask) String() string { return proto.CompactTextString(m) }
func (*WorkflowTask) ProtoMessage()    {}
func (*WorkflowTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_workflowtask_2f90d7daef8fa23a, []int{0}
}
func (m *WorkflowTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowTask.Unmarshal(m, b)
}
func (m *WorkflowTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowTask.Marshal(b, m, deterministic)
}
func (dst *WorkflowTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowTask.Merge(dst, src)
}
func (m *WorkflowTask) XXX_Size() int {
	return xxx_messageInfo_WorkflowTask.Size(m)
}
func (m *WorkflowTask) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowTask.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowTask proto.InternalMessageInfo

func (m *WorkflowTask) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WorkflowTask) GetTaskReferenceName() string {
	if m != nil {
		return m.TaskReferenceName
	}
	return ""
}

func (m *WorkflowTask) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *WorkflowTask) GetInputParameters() map[string]*_struct.Value {
	if m != nil {
		return m.InputParameters
	}
	return nil
}

func (m *WorkflowTask) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *WorkflowTask) GetDynamicTaskNameParam() string {
	if m != nil {
		return m.DynamicTaskNameParam
	}
	return ""
}

func (m *WorkflowTask) GetCaseValueParam() string {
	if m != nil {
		return m.CaseValueParam
	}
	return ""
}

func (m *WorkflowTask) GetCaseExpression() string {
	if m != nil {
		return m.CaseExpression
	}
	return ""
}

func (m *WorkflowTask) GetScriptExpression() string {
	if m != nil {
		return m.ScriptExpression
	}
	return ""
}

func (m *WorkflowTask) GetDecisionCases() map[string]*WorkflowTask_WorkflowTaskList {
	if m != nil {
		return m.DecisionCases
	}
	return nil
}

func (m *WorkflowTask) GetDynamicForkTasksParam() string {
	if m != nil {
		return m.DynamicForkTasksParam
	}
	return ""
}

func (m *WorkflowTask) GetDynamicForkTasksInputParamName() string {
	if m != nil {
		return m.DynamicForkTasksInputParamName
	}
	return ""
}

func (m *WorkflowTask) GetDefaultCase() []*WorkflowTask {
	if m != nil {
		return m.DefaultCase
	}
	return nil
}

func (m *WorkflowTask) GetForkTasks() []*WorkflowTask_WorkflowTaskList {
	if m != nil {
		return m.ForkTasks
	}
	return nil
}

func (m *WorkflowTask) GetStartDelay() int32 {
	if m != nil {
		return m.StartDelay
	}
	return 0
}

func (m *WorkflowTask) GetSubWorkflowParam() *SubWorkflowParams {
	if m != nil {
		return m.SubWorkflowParam
	}
	return nil
}

func (m *WorkflowTask) GetJoinOn() []string {
	if m != nil {
		return m.JoinOn
	}
	return nil
}

func (m *WorkflowTask) GetSink() string {
	if m != nil {
		return m.Sink
	}
	return ""
}

func (m *WorkflowTask) GetOptional() bool {
	if m != nil {
		return m.Optional
	}
	return false
}

func (m *WorkflowTask) GetTaskDefinition() *TaskDef {
	if m != nil {
		return m.TaskDefinition
	}
	return nil
}

func (m *WorkflowTask) GetRateLimited() bool {
	if m != nil {
		return m.RateLimited
	}
	return false
}

func (m *WorkflowTask) GetDefaultExclusiveJoinTask() []string {
	if m != nil {
		return m.DefaultExclusiveJoinTask
	}
	return nil
}

func (m *WorkflowTask) GetAsyncComplete() bool {
	if m != nil {
		return m.AsyncComplete
	}
	return false
}

type WorkflowTask_WorkflowTaskList struct {
	Tasks                []*WorkflowTask `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *WorkflowTask_WorkflowTaskList) Reset()         { *m = WorkflowTask_WorkflowTaskList{} }
func (m *WorkflowTask_WorkflowTaskList) String() string { return proto.CompactTextString(m) }
func (*WorkflowTask_WorkflowTaskList) ProtoMessage()    {}
func (*WorkflowTask_WorkflowTaskList) Descriptor() ([]byte, []int) {
	return fileDescriptor_workflowtask_2f90d7daef8fa23a, []int{0, 0}
}
func (m *WorkflowTask_WorkflowTaskList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowTask_WorkflowTaskList.Unmarshal(m, b)
}
func (m *WorkflowTask_WorkflowTaskList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowTask_WorkflowTaskList.Marshal(b, m, deterministic)
}
func (dst *WorkflowTask_WorkflowTaskList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowTask_WorkflowTaskList.Merge(dst, src)
}
func (m *WorkflowTask_WorkflowTaskList) XXX_Size() int {
	return xxx_messageInfo_WorkflowTask_WorkflowTaskList.Size(m)
}
func (m *WorkflowTask_WorkflowTaskList) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowTask_WorkflowTaskList.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowTask_WorkflowTaskList proto.InternalMessageInfo

func (m *WorkflowTask_WorkflowTaskList) GetTasks() []*WorkflowTask {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func init() {
	proto.RegisterType((*WorkflowTask)(nil), "conductor.proto.WorkflowTask")
	proto.RegisterMapType((map[string]*WorkflowTask_WorkflowTaskList)(nil), "conductor.proto.WorkflowTask.DecisionCasesEntry")
	proto.RegisterMapType((map[string]*_struct.Value)(nil), "conductor.proto.WorkflowTask.InputParametersEntry")
	proto.RegisterType((*WorkflowTask_WorkflowTaskList)(nil), "conductor.proto.WorkflowTask.WorkflowTaskList")
}

func init() {
	proto.RegisterFile("model/workflowtask.proto", fileDescriptor_workflowtask_2f90d7daef8fa23a)
}

var fileDescriptor_workflowtask_2f90d7daef8fa23a = []byte{
	// 777 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0x7f, 0x6f, 0xe3, 0x44,
	0x10, 0x55, 0x2e, 0x97, 0x5e, 0x33, 0x4e, 0x93, 0x74, 0xdb, 0xbb, 0xae, 0x72, 0x1c, 0x84, 0x43,
	0x88, 0x48, 0x20, 0x07, 0xe5, 0x84, 0x40, 0x27, 0x21, 0xc1, 0x35, 0x05, 0x01, 0x05, 0x2a, 0x83,
	0xa8, 0x54, 0x09, 0x59, 0x8e, 0xbd, 0x0e, 0x4b, 0xec, 0x5d, 0x6b, 0x77, 0xdd, 0x36, 0x1f, 0x8a,
	0xef, 0x88, 0x76, 0xd6, 0x4e, 0xdc, 0xb4, 0xaa, 0xe0, 0xbf, 0xf5, 0x9b, 0x37, 0x3f, 0xde, 0xec,
	0xec, 0x18, 0x68, 0x2e, 0x13, 0x96, 0x4d, 0x6f, 0xa4, 0x5a, 0xa5, 0x99, 0xbc, 0x31, 0x91, 0x5e,
	0xf9, 0x85, 0x92, 0x46, 0x92, 0x41, 0x2c, 0x45, 0x52, 0xc6, 0x46, 0x2a, 0x07, 0x8c, 0x8e, 0x1c,
	0xd5, 0x52, 0x12, 0x96, 0x56, 0xe0, 0x2b, 0x07, 0xea, 0x72, 0x51, 0x87, 0x28, 0x22, 0x15, 0xe5,
	0xba, 0x32, 0xbf, 0xb7, 0x94, 0x72, 0x99, 0xb1, 0x29, 0x7e, 0x2d, 0xca, 0x74, 0xaa, 0x8d, 0x2a,
	0x63, 0xe3, 0xac, 0xaf, 0xff, 0xf1, 0xa0, 0x77, 0x59, 0xb9, 0xfd, 0x1e, 0xe9, 0x15, 0x21, 0xf0,
	0x54, 0x44, 0x39, 0xa3, 0xad, 0x71, 0x6b, 0xd2, 0x0d, 0xf0, 0x4c, 0x7c, 0x38, 0xb2, 0x29, 0x43,
	0xc5, 0x52, 0xa6, 0x98, 0x88, 0x59, 0x88, 0x94, 0x27, 0x48, 0x39, 0xb4, 0xa6, 0xa0, 0xb6, 0xfc,
	0x62, 0xf9, 0x63, 0xf0, 0x12, 0xa6, 0x63, 0xc5, 0x0b, 0xc3, 0xa5, 0xa0, 0x6d, 0xe4, 0x35, 0x21,
	0xf2, 0x27, 0x0c, 0xb9, 0x28, 0x4a, 0x13, 0x62, 0xa9, 0xcc, 0x30, 0xa5, 0xe9, 0xd3, 0x71, 0x7b,
	0xe2, 0xcd, 0x66, 0xfe, 0x8e, 0x68, 0xbf, 0x59, 0x9e, 0xff, 0x83, 0xf5, 0xba, 0xd8, 0x38, 0x9d,
	0x09, 0xa3, 0xd6, 0xc1, 0x80, 0xdf, 0x45, 0xad, 0x08, 0xb3, 0x2e, 0x18, 0xed, 0x38, 0x11, 0xf6,
	0x4c, 0xbe, 0x80, 0x93, 0x64, 0x2d, 0xa2, 0x9c, 0xc7, 0x21, 0x8a, 0xb1, 0x12, 0x5c, 0x7a, 0xba,
	0x87, 0xb4, 0xe3, 0xca, 0x6c, 0xf3, 0x58, 0x19, 0x18, 0x8f, 0x4c, 0x60, 0x18, 0x47, 0x9a, 0x85,
	0xd7, 0x51, 0x56, 0xd6, 0xfc, 0x67, 0xc8, 0xef, 0x5b, 0xfc, 0x0f, 0x0b, 0x3b, 0xe6, 0x27, 0x30,
	0x40, 0x26, 0xbb, 0x2d, 0x14, 0xd3, 0xda, 0x2a, 0xdf, 0xdf, 0x12, 0xcf, 0x36, 0x28, 0xf9, 0x14,
	0x0e, 0x5d, 0x27, 0x9a, 0xd4, 0x17, 0x48, 0x1d, 0x3a, 0x43, 0x83, 0x7c, 0x09, 0xfd, 0x84, 0xc5,
	0xdc, 0x9e, 0x43, 0x1b, 0x47, 0xd3, 0x2e, 0xf6, 0xe9, 0xf3, 0xc7, 0xfb, 0x34, 0xaf, 0x7c, 0x4e,
	0xad, 0x8b, 0xeb, 0xd2, 0x41, 0xd2, 0xc4, 0xc8, 0x97, 0x40, 0xeb, 0x7e, 0xa4, 0x52, 0xad, 0xb0,
	0x29, 0xba, 0x12, 0x08, 0x58, 0xcc, 0xf3, 0xca, 0xfe, 0x9d, 0x54, 0x2b, 0x1b, 0x54, 0x3b, 0x9d,
	0x3f, 0xc1, 0x47, 0x0f, 0x38, 0x36, 0xae, 0xd3, 0x4d, 0x87, 0x87, 0x31, 0xde, 0xdf, 0x8d, 0xb1,
	0xbd, 0x40, 0x1c, 0x95, 0x6f, 0xa0, 0x97, 0xb0, 0x34, 0x2a, 0x33, 0x83, 0xea, 0x68, 0x0f, 0xc5,
	0xbd, 0x7a, 0x54, 0x9c, 0x1d, 0x25, 0x74, 0xb1, 0x42, 0xc8, 0xcf, 0x00, 0xdb, 0x32, 0xe8, 0x01,
	0xfa, 0xfb, 0x8f, 0x37, 0xa7, 0xf9, 0x71, 0xce, 0xb5, 0x09, 0xba, 0x69, 0x5d, 0x1e, 0xf9, 0x00,
	0x3c, 0x6d, 0x22, 0x65, 0xc2, 0x84, 0x65, 0xd1, 0x9a, 0xf6, 0xc7, 0xad, 0x49, 0x27, 0x00, 0x84,
	0xe6, 0x16, 0x21, 0x17, 0x40, 0x74, 0xb9, 0x08, 0xeb, 0xb7, 0x56, 0x75, 0x6c, 0x30, 0x6e, 0x4d,
	0xbc, 0xd9, 0xeb, 0x7b, 0x79, 0x7f, 0x2b, 0x17, 0x75, 0x36, 0x14, 0xad, 0x83, 0xa1, 0xde, 0x81,
	0xc8, 0x09, 0x3c, 0xfb, 0x5b, 0x72, 0x11, 0x4a, 0x41, 0x87, 0xe3, 0xf6, 0xa4, 0x1b, 0xec, 0xd9,
	0xcf, 0x5f, 0x85, 0x1d, 0x63, 0xcd, 0xc5, 0x8a, 0x1e, 0xba, 0x31, 0xb6, 0x67, 0x32, 0x82, 0x7d,
	0x89, 0x6f, 0x28, 0xca, 0x28, 0x19, 0xb7, 0x26, 0xfb, 0xc1, 0xe6, 0x9b, 0x7c, 0x0b, 0x03, 0x1c,
	0xed, 0x84, 0xa5, 0x5c, 0x70, 0x7c, 0x7b, 0x47, 0x58, 0x17, 0xbd, 0x57, 0x97, 0x15, 0x3b, 0x67,
	0x69, 0xd0, 0x37, 0xee, 0x50, 0xf1, 0xc9, 0x87, 0xd0, 0x53, 0x91, 0x61, 0x61, 0xc6, 0x73, 0x6e,
	0x58, 0x42, 0x8f, 0x31, 0x85, 0x67, 0xb1, 0x73, 0x07, 0x91, 0xaf, 0xe1, 0x65, 0x7d, 0x65, 0xec,
	0x36, 0xce, 0x4a, 0xcd, 0xaf, 0x59, 0x88, 0x02, 0x6c, 0x2c, 0xfa, 0x1c, 0x25, 0xd0, 0x8a, 0x72,
	0x56, 0x33, 0x7e, 0x94, 0x5c, 0xe0, 0x82, 0xf9, 0x18, 0xfa, 0x91, 0x5e, 0x8b, 0x38, 0x8c, 0x65,
	0x5e, 0x64, 0xcc, 0x30, 0x7a, 0x82, 0x39, 0x0e, 0x10, 0x3d, 0xad, 0xc0, 0xd1, 0xf7, 0x30, 0xdc,
	0xbd, 0x26, 0xf2, 0x06, 0x3a, 0xee, 0x96, 0x5b, 0xff, 0x65, 0x4a, 0x1c, 0x77, 0x74, 0x05, 0xc7,
	0x0f, 0x2d, 0x0d, 0x32, 0x84, 0xf6, 0x8a, 0xad, 0xab, 0x3d, 0x67, 0x8f, 0xe4, 0x33, 0xe8, 0xe0,
	0x2b, 0xc7, 0xc5, 0xe6, 0xcd, 0x5e, 0xf8, 0x6e, 0x73, 0xfa, 0xf5, 0xe6, 0xf4, 0xf1, 0xb1, 0x07,
	0x8e, 0xf4, 0xf6, 0xc9, 0x57, 0xad, 0x51, 0x01, 0xe4, 0xfe, 0x43, 0x7b, 0x20, 0xf2, 0xfc, 0x6e,
	0xe4, 0xff, 0x3b, 0x9e, 0xdb, 0x8c, 0xef, 0x38, 0xbc, 0x8c, 0x65, 0xee, 0x0b, 0x66, 0xd2, 0x8c,
	0xdf, 0xee, 0xc6, 0x79, 0xd7, 0x6f, 0xfa, 0x5e, 0x2c, 0xae, 0xde, 0x2e, 0xb9, 0xf9, 0xab, 0x5c,
	0xf8, 0xb1, 0xcc, 0xa7, 0x95, 0xcf, 0x74, 0xe3, 0x33, 0x8d, 0x33, 0xce, 0x84, 0x99, 0x2e, 0xe5,
	0x52, 0x15, 0x71, 0x03, 0xc7, 0x1f, 0xca, 0x62, 0x0f, 0x43, 0xbe, 0xf9, 0x37, 0x00, 0x00, 0xff,
	0xff, 0xea, 0x8c, 0x0d, 0x6c, 0xa0, 0x06, 0x00, 0x00,
}
