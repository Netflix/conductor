// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc/task_service.proto

package tasks // import "github.com/netflix/conductor/client/gogrpc/conductor/grpc/tasks"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import model "github.com/netflix/conductor/client/gogrpc/conductor/model"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PollRequest struct {
	TaskType             string   `protobuf:"bytes,1,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	WorkerId             string   `protobuf:"bytes,2,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Domain               string   `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PollRequest) Reset()         { *m = PollRequest{} }
func (m *PollRequest) String() string { return proto.CompactTextString(m) }
func (*PollRequest) ProtoMessage()    {}
func (*PollRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{0}
}
func (m *PollRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PollRequest.Unmarshal(m, b)
}
func (m *PollRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PollRequest.Marshal(b, m, deterministic)
}
func (dst *PollRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PollRequest.Merge(dst, src)
}
func (m *PollRequest) XXX_Size() int {
	return xxx_messageInfo_PollRequest.Size(m)
}
func (m *PollRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PollRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PollRequest proto.InternalMessageInfo

func (m *PollRequest) GetTaskType() string {
	if m != nil {
		return m.TaskType
	}
	return ""
}

func (m *PollRequest) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

func (m *PollRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

type PollResponse struct {
	Task                 *model.Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PollResponse) Reset()         { *m = PollResponse{} }
func (m *PollResponse) String() string { return proto.CompactTextString(m) }
func (*PollResponse) ProtoMessage()    {}
func (*PollResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{1}
}
func (m *PollResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PollResponse.Unmarshal(m, b)
}
func (m *PollResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PollResponse.Marshal(b, m, deterministic)
}
func (dst *PollResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PollResponse.Merge(dst, src)
}
func (m *PollResponse) XXX_Size() int {
	return xxx_messageInfo_PollResponse.Size(m)
}
func (m *PollResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PollResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PollResponse proto.InternalMessageInfo

func (m *PollResponse) GetTask() *model.Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type BatchPollRequest struct {
	TaskType             string   `protobuf:"bytes,1,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	WorkerId             string   `protobuf:"bytes,2,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Domain               string   `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	Count                int32    `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	Timeout              int32    `protobuf:"varint,5,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchPollRequest) Reset()         { *m = BatchPollRequest{} }
func (m *BatchPollRequest) String() string { return proto.CompactTextString(m) }
func (*BatchPollRequest) ProtoMessage()    {}
func (*BatchPollRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{2}
}
func (m *BatchPollRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchPollRequest.Unmarshal(m, b)
}
func (m *BatchPollRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchPollRequest.Marshal(b, m, deterministic)
}
func (dst *BatchPollRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchPollRequest.Merge(dst, src)
}
func (m *BatchPollRequest) XXX_Size() int {
	return xxx_messageInfo_BatchPollRequest.Size(m)
}
func (m *BatchPollRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchPollRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchPollRequest proto.InternalMessageInfo

func (m *BatchPollRequest) GetTaskType() string {
	if m != nil {
		return m.TaskType
	}
	return ""
}

func (m *BatchPollRequest) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

func (m *BatchPollRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *BatchPollRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *BatchPollRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type TasksInProgressRequest struct {
	TaskType             string   `protobuf:"bytes,1,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	StartKey             string   `protobuf:"bytes,2,opt,name=start_key,json=startKey,proto3" json:"start_key,omitempty"`
	Count                int32    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TasksInProgressRequest) Reset()         { *m = TasksInProgressRequest{} }
func (m *TasksInProgressRequest) String() string { return proto.CompactTextString(m) }
func (*TasksInProgressRequest) ProtoMessage()    {}
func (*TasksInProgressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{3}
}
func (m *TasksInProgressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TasksInProgressRequest.Unmarshal(m, b)
}
func (m *TasksInProgressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TasksInProgressRequest.Marshal(b, m, deterministic)
}
func (dst *TasksInProgressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TasksInProgressRequest.Merge(dst, src)
}
func (m *TasksInProgressRequest) XXX_Size() int {
	return xxx_messageInfo_TasksInProgressRequest.Size(m)
}
func (m *TasksInProgressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TasksInProgressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TasksInProgressRequest proto.InternalMessageInfo

func (m *TasksInProgressRequest) GetTaskType() string {
	if m != nil {
		return m.TaskType
	}
	return ""
}

func (m *TasksInProgressRequest) GetStartKey() string {
	if m != nil {
		return m.StartKey
	}
	return ""
}

func (m *TasksInProgressRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type TasksInProgressResponse struct {
	Tasks                []*model.Task `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TasksInProgressResponse) Reset()         { *m = TasksInProgressResponse{} }
func (m *TasksInProgressResponse) String() string { return proto.CompactTextString(m) }
func (*TasksInProgressResponse) ProtoMessage()    {}
func (*TasksInProgressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{4}
}
func (m *TasksInProgressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TasksInProgressResponse.Unmarshal(m, b)
}
func (m *TasksInProgressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TasksInProgressResponse.Marshal(b, m, deterministic)
}
func (dst *TasksInProgressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TasksInProgressResponse.Merge(dst, src)
}
func (m *TasksInProgressResponse) XXX_Size() int {
	return xxx_messageInfo_TasksInProgressResponse.Size(m)
}
func (m *TasksInProgressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TasksInProgressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TasksInProgressResponse proto.InternalMessageInfo

func (m *TasksInProgressResponse) GetTasks() []*model.Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type PendingTaskRequest struct {
	WorkflowId           string   `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	TaskRefName          string   `protobuf:"bytes,2,opt,name=task_ref_name,json=taskRefName,proto3" json:"task_ref_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PendingTaskRequest) Reset()         { *m = PendingTaskRequest{} }
func (m *PendingTaskRequest) String() string { return proto.CompactTextString(m) }
func (*PendingTaskRequest) ProtoMessage()    {}
func (*PendingTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{5}
}
func (m *PendingTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingTaskRequest.Unmarshal(m, b)
}
func (m *PendingTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingTaskRequest.Marshal(b, m, deterministic)
}
func (dst *PendingTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingTaskRequest.Merge(dst, src)
}
func (m *PendingTaskRequest) XXX_Size() int {
	return xxx_messageInfo_PendingTaskRequest.Size(m)
}
func (m *PendingTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PendingTaskRequest proto.InternalMessageInfo

func (m *PendingTaskRequest) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

func (m *PendingTaskRequest) GetTaskRefName() string {
	if m != nil {
		return m.TaskRefName
	}
	return ""
}

type PendingTaskResponse struct {
	Task                 *model.Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PendingTaskResponse) Reset()         { *m = PendingTaskResponse{} }
func (m *PendingTaskResponse) String() string { return proto.CompactTextString(m) }
func (*PendingTaskResponse) ProtoMessage()    {}
func (*PendingTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{6}
}
func (m *PendingTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingTaskResponse.Unmarshal(m, b)
}
func (m *PendingTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingTaskResponse.Marshal(b, m, deterministic)
}
func (dst *PendingTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingTaskResponse.Merge(dst, src)
}
func (m *PendingTaskResponse) XXX_Size() int {
	return xxx_messageInfo_PendingTaskResponse.Size(m)
}
func (m *PendingTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PendingTaskResponse proto.InternalMessageInfo

func (m *PendingTaskResponse) GetTask() *model.Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type UpdateTaskRequest struct {
	Result               *model.TaskResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UpdateTaskRequest) Reset()         { *m = UpdateTaskRequest{} }
func (m *UpdateTaskRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskRequest) ProtoMessage()    {}
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{7}
}
func (m *UpdateTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTaskRequest.Unmarshal(m, b)
}
func (m *UpdateTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTaskRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskRequest.Merge(dst, src)
}
func (m *UpdateTaskRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTaskRequest.Size(m)
}
func (m *UpdateTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskRequest proto.InternalMessageInfo

func (m *UpdateTaskRequest) GetResult() *model.TaskResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type UpdateTaskResponse struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTaskResponse) Reset()         { *m = UpdateTaskResponse{} }
func (m *UpdateTaskResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskResponse) ProtoMessage()    {}
func (*UpdateTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{8}
}
func (m *UpdateTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTaskResponse.Unmarshal(m, b)
}
func (m *UpdateTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTaskResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskResponse.Merge(dst, src)
}
func (m *UpdateTaskResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateTaskResponse.Size(m)
}
func (m *UpdateTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskResponse proto.InternalMessageInfo

func (m *UpdateTaskResponse) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type AckTaskRequest struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	WorkerId             string   `protobuf:"bytes,2,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AckTaskRequest) Reset()         { *m = AckTaskRequest{} }
func (m *AckTaskRequest) String() string { return proto.CompactTextString(m) }
func (*AckTaskRequest) ProtoMessage()    {}
func (*AckTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{9}
}
func (m *AckTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AckTaskRequest.Unmarshal(m, b)
}
func (m *AckTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AckTaskRequest.Marshal(b, m, deterministic)
}
func (dst *AckTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AckTaskRequest.Merge(dst, src)
}
func (m *AckTaskRequest) XXX_Size() int {
	return xxx_messageInfo_AckTaskRequest.Size(m)
}
func (m *AckTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AckTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AckTaskRequest proto.InternalMessageInfo

func (m *AckTaskRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *AckTaskRequest) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

type AckTaskResponse struct {
	Ack                  bool     `protobuf:"varint,1,opt,name=ack,proto3" json:"ack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AckTaskResponse) Reset()         { *m = AckTaskResponse{} }
func (m *AckTaskResponse) String() string { return proto.CompactTextString(m) }
func (*AckTaskResponse) ProtoMessage()    {}
func (*AckTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{10}
}
func (m *AckTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AckTaskResponse.Unmarshal(m, b)
}
func (m *AckTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AckTaskResponse.Marshal(b, m, deterministic)
}
func (dst *AckTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AckTaskResponse.Merge(dst, src)
}
func (m *AckTaskResponse) XXX_Size() int {
	return xxx_messageInfo_AckTaskResponse.Size(m)
}
func (m *AckTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AckTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AckTaskResponse proto.InternalMessageInfo

func (m *AckTaskResponse) GetAck() bool {
	if m != nil {
		return m.Ack
	}
	return false
}

type AddLogRequest struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Log                  string   `protobuf:"bytes,2,opt,name=log,proto3" json:"log,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddLogRequest) Reset()         { *m = AddLogRequest{} }
func (m *AddLogRequest) String() string { return proto.CompactTextString(m) }
func (*AddLogRequest) ProtoMessage()    {}
func (*AddLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{11}
}
func (m *AddLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddLogRequest.Unmarshal(m, b)
}
func (m *AddLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddLogRequest.Marshal(b, m, deterministic)
}
func (dst *AddLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddLogRequest.Merge(dst, src)
}
func (m *AddLogRequest) XXX_Size() int {
	return xxx_messageInfo_AddLogRequest.Size(m)
}
func (m *AddLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddLogRequest proto.InternalMessageInfo

func (m *AddLogRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *AddLogRequest) GetLog() string {
	if m != nil {
		return m.Log
	}
	return ""
}

type AddLogResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddLogResponse) Reset()         { *m = AddLogResponse{} }
func (m *AddLogResponse) String() string { return proto.CompactTextString(m) }
func (*AddLogResponse) ProtoMessage()    {}
func (*AddLogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{12}
}
func (m *AddLogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddLogResponse.Unmarshal(m, b)
}
func (m *AddLogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddLogResponse.Marshal(b, m, deterministic)
}
func (dst *AddLogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddLogResponse.Merge(dst, src)
}
func (m *AddLogResponse) XXX_Size() int {
	return xxx_messageInfo_AddLogResponse.Size(m)
}
func (m *AddLogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddLogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddLogResponse proto.InternalMessageInfo

type GetTaskLogsRequest struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTaskLogsRequest) Reset()         { *m = GetTaskLogsRequest{} }
func (m *GetTaskLogsRequest) String() string { return proto.CompactTextString(m) }
func (*GetTaskLogsRequest) ProtoMessage()    {}
func (*GetTaskLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{13}
}
func (m *GetTaskLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTaskLogsRequest.Unmarshal(m, b)
}
func (m *GetTaskLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTaskLogsRequest.Marshal(b, m, deterministic)
}
func (dst *GetTaskLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskLogsRequest.Merge(dst, src)
}
func (m *GetTaskLogsRequest) XXX_Size() int {
	return xxx_messageInfo_GetTaskLogsRequest.Size(m)
}
func (m *GetTaskLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskLogsRequest proto.InternalMessageInfo

func (m *GetTaskLogsRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type GetTaskLogsResponse struct {
	Logs                 []*model.TaskExecLog `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetTaskLogsResponse) Reset()         { *m = GetTaskLogsResponse{} }
func (m *GetTaskLogsResponse) String() string { return proto.CompactTextString(m) }
func (*GetTaskLogsResponse) ProtoMessage()    {}
func (*GetTaskLogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{14}
}
func (m *GetTaskLogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTaskLogsResponse.Unmarshal(m, b)
}
func (m *GetTaskLogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTaskLogsResponse.Marshal(b, m, deterministic)
}
func (dst *GetTaskLogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskLogsResponse.Merge(dst, src)
}
func (m *GetTaskLogsResponse) XXX_Size() int {
	return xxx_messageInfo_GetTaskLogsResponse.Size(m)
}
func (m *GetTaskLogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskLogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskLogsResponse proto.InternalMessageInfo

func (m *GetTaskLogsResponse) GetLogs() []*model.TaskExecLog {
	if m != nil {
		return m.Logs
	}
	return nil
}

type GetTaskRequest struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTaskRequest) Reset()         { *m = GetTaskRequest{} }
func (m *GetTaskRequest) String() string { return proto.CompactTextString(m) }
func (*GetTaskRequest) ProtoMessage()    {}
func (*GetTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{15}
}
func (m *GetTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTaskRequest.Unmarshal(m, b)
}
func (m *GetTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTaskRequest.Marshal(b, m, deterministic)
}
func (dst *GetTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskRequest.Merge(dst, src)
}
func (m *GetTaskRequest) XXX_Size() int {
	return xxx_messageInfo_GetTaskRequest.Size(m)
}
func (m *GetTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskRequest proto.InternalMessageInfo

func (m *GetTaskRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type GetTaskResponse struct {
	Task                 *model.Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetTaskResponse) Reset()         { *m = GetTaskResponse{} }
func (m *GetTaskResponse) String() string { return proto.CompactTextString(m) }
func (*GetTaskResponse) ProtoMessage()    {}
func (*GetTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{16}
}
func (m *GetTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTaskResponse.Unmarshal(m, b)
}
func (m *GetTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTaskResponse.Marshal(b, m, deterministic)
}
func (dst *GetTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskResponse.Merge(dst, src)
}
func (m *GetTaskResponse) XXX_Size() int {
	return xxx_messageInfo_GetTaskResponse.Size(m)
}
func (m *GetTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskResponse proto.InternalMessageInfo

func (m *GetTaskResponse) GetTask() *model.Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type RemoveTaskRequest struct {
	TaskType             string   `protobuf:"bytes,1,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	TaskId               string   `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveTaskRequest) Reset()         { *m = RemoveTaskRequest{} }
func (m *RemoveTaskRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveTaskRequest) ProtoMessage()    {}
func (*RemoveTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{17}
}
func (m *RemoveTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveTaskRequest.Unmarshal(m, b)
}
func (m *RemoveTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveTaskRequest.Marshal(b, m, deterministic)
}
func (dst *RemoveTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveTaskRequest.Merge(dst, src)
}
func (m *RemoveTaskRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveTaskRequest.Size(m)
}
func (m *RemoveTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveTaskRequest proto.InternalMessageInfo

func (m *RemoveTaskRequest) GetTaskType() string {
	if m != nil {
		return m.TaskType
	}
	return ""
}

func (m *RemoveTaskRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type RemoveTaskResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveTaskResponse) Reset()         { *m = RemoveTaskResponse{} }
func (m *RemoveTaskResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveTaskResponse) ProtoMessage()    {}
func (*RemoveTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{18}
}
func (m *RemoveTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveTaskResponse.Unmarshal(m, b)
}
func (m *RemoveTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveTaskResponse.Marshal(b, m, deterministic)
}
func (dst *RemoveTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveTaskResponse.Merge(dst, src)
}
func (m *RemoveTaskResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveTaskResponse.Size(m)
}
func (m *RemoveTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveTaskResponse proto.InternalMessageInfo

type QueueSizesRequest struct {
	TaskTypes            []string `protobuf:"bytes,1,rep,name=task_types,json=taskTypes,proto3" json:"task_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueueSizesRequest) Reset()         { *m = QueueSizesRequest{} }
func (m *QueueSizesRequest) String() string { return proto.CompactTextString(m) }
func (*QueueSizesRequest) ProtoMessage()    {}
func (*QueueSizesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{19}
}
func (m *QueueSizesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueSizesRequest.Unmarshal(m, b)
}
func (m *QueueSizesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueSizesRequest.Marshal(b, m, deterministic)
}
func (dst *QueueSizesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueSizesRequest.Merge(dst, src)
}
func (m *QueueSizesRequest) XXX_Size() int {
	return xxx_messageInfo_QueueSizesRequest.Size(m)
}
func (m *QueueSizesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueSizesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueueSizesRequest proto.InternalMessageInfo

func (m *QueueSizesRequest) GetTaskTypes() []string {
	if m != nil {
		return m.TaskTypes
	}
	return nil
}

type QueueSizesResponse struct {
	QueueForTask         map[string]int32 `protobuf:"bytes,1,rep,name=queue_for_task,json=queueForTask,proto3" json:"queue_for_task,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *QueueSizesResponse) Reset()         { *m = QueueSizesResponse{} }
func (m *QueueSizesResponse) String() string { return proto.CompactTextString(m) }
func (*QueueSizesResponse) ProtoMessage()    {}
func (*QueueSizesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{20}
}
func (m *QueueSizesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueSizesResponse.Unmarshal(m, b)
}
func (m *QueueSizesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueSizesResponse.Marshal(b, m, deterministic)
}
func (dst *QueueSizesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueSizesResponse.Merge(dst, src)
}
func (m *QueueSizesResponse) XXX_Size() int {
	return xxx_messageInfo_QueueSizesResponse.Size(m)
}
func (m *QueueSizesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueSizesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueueSizesResponse proto.InternalMessageInfo

func (m *QueueSizesResponse) GetQueueForTask() map[string]int32 {
	if m != nil {
		return m.QueueForTask
	}
	return nil
}

type QueueInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueueInfoRequest) Reset()         { *m = QueueInfoRequest{} }
func (m *QueueInfoRequest) String() string { return proto.CompactTextString(m) }
func (*QueueInfoRequest) ProtoMessage()    {}
func (*QueueInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{21}
}
func (m *QueueInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueInfoRequest.Unmarshal(m, b)
}
func (m *QueueInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueInfoRequest.Marshal(b, m, deterministic)
}
func (dst *QueueInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueInfoRequest.Merge(dst, src)
}
func (m *QueueInfoRequest) XXX_Size() int {
	return xxx_messageInfo_QueueInfoRequest.Size(m)
}
func (m *QueueInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueueInfoRequest proto.InternalMessageInfo

type QueueInfoResponse struct {
	Queues               map[string]int64 `protobuf:"bytes,1,rep,name=queues,proto3" json:"queues,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *QueueInfoResponse) Reset()         { *m = QueueInfoResponse{} }
func (m *QueueInfoResponse) String() string { return proto.CompactTextString(m) }
func (*QueueInfoResponse) ProtoMessage()    {}
func (*QueueInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{22}
}
func (m *QueueInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueInfoResponse.Unmarshal(m, b)
}
func (m *QueueInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueInfoResponse.Marshal(b, m, deterministic)
}
func (dst *QueueInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueInfoResponse.Merge(dst, src)
}
func (m *QueueInfoResponse) XXX_Size() int {
	return xxx_messageInfo_QueueInfoResponse.Size(m)
}
func (m *QueueInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueueInfoResponse proto.InternalMessageInfo

func (m *QueueInfoResponse) GetQueues() map[string]int64 {
	if m != nil {
		return m.Queues
	}
	return nil
}

type QueueAllInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueueAllInfoRequest) Reset()         { *m = QueueAllInfoRequest{} }
func (m *QueueAllInfoRequest) String() string { return proto.CompactTextString(m) }
func (*QueueAllInfoRequest) ProtoMessage()    {}
func (*QueueAllInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{23}
}
func (m *QueueAllInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueAllInfoRequest.Unmarshal(m, b)
}
func (m *QueueAllInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueAllInfoRequest.Marshal(b, m, deterministic)
}
func (dst *QueueAllInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueAllInfoRequest.Merge(dst, src)
}
func (m *QueueAllInfoRequest) XXX_Size() int {
	return xxx_messageInfo_QueueAllInfoRequest.Size(m)
}
func (m *QueueAllInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueAllInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueueAllInfoRequest proto.InternalMessageInfo

type QueueAllInfoResponse struct {
	Queues               map[string]*QueueAllInfoResponse_QueueInfo `protobuf:"bytes,1,rep,name=queues,proto3" json:"queues,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *QueueAllInfoResponse) Reset()         { *m = QueueAllInfoResponse{} }
func (m *QueueAllInfoResponse) String() string { return proto.CompactTextString(m) }
func (*QueueAllInfoResponse) ProtoMessage()    {}
func (*QueueAllInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{24}
}
func (m *QueueAllInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueAllInfoResponse.Unmarshal(m, b)
}
func (m *QueueAllInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueAllInfoResponse.Marshal(b, m, deterministic)
}
func (dst *QueueAllInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueAllInfoResponse.Merge(dst, src)
}
func (m *QueueAllInfoResponse) XXX_Size() int {
	return xxx_messageInfo_QueueAllInfoResponse.Size(m)
}
func (m *QueueAllInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueAllInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueueAllInfoResponse proto.InternalMessageInfo

func (m *QueueAllInfoResponse) GetQueues() map[string]*QueueAllInfoResponse_QueueInfo {
	if m != nil {
		return m.Queues
	}
	return nil
}

type QueueAllInfoResponse_ShardInfo struct {
	Size                 int64    `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Uacked               int64    `protobuf:"varint,2,opt,name=uacked,proto3" json:"uacked,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueueAllInfoResponse_ShardInfo) Reset()         { *m = QueueAllInfoResponse_ShardInfo{} }
func (m *QueueAllInfoResponse_ShardInfo) String() string { return proto.CompactTextString(m) }
func (*QueueAllInfoResponse_ShardInfo) ProtoMessage()    {}
func (*QueueAllInfoResponse_ShardInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{24, 0}
}
func (m *QueueAllInfoResponse_ShardInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueAllInfoResponse_ShardInfo.Unmarshal(m, b)
}
func (m *QueueAllInfoResponse_ShardInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueAllInfoResponse_ShardInfo.Marshal(b, m, deterministic)
}
func (dst *QueueAllInfoResponse_ShardInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueAllInfoResponse_ShardInfo.Merge(dst, src)
}
func (m *QueueAllInfoResponse_ShardInfo) XXX_Size() int {
	return xxx_messageInfo_QueueAllInfoResponse_ShardInfo.Size(m)
}
func (m *QueueAllInfoResponse_ShardInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueAllInfoResponse_ShardInfo.DiscardUnknown(m)
}

var xxx_messageInfo_QueueAllInfoResponse_ShardInfo proto.InternalMessageInfo

func (m *QueueAllInfoResponse_ShardInfo) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *QueueAllInfoResponse_ShardInfo) GetUacked() int64 {
	if m != nil {
		return m.Uacked
	}
	return 0
}

type QueueAllInfoResponse_QueueInfo struct {
	Shards               map[string]*QueueAllInfoResponse_ShardInfo `protobuf:"bytes,1,rep,name=shards,proto3" json:"shards,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *QueueAllInfoResponse_QueueInfo) Reset()         { *m = QueueAllInfoResponse_QueueInfo{} }
func (m *QueueAllInfoResponse_QueueInfo) String() string { return proto.CompactTextString(m) }
func (*QueueAllInfoResponse_QueueInfo) ProtoMessage()    {}
func (*QueueAllInfoResponse_QueueInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_service_2cd893b942ad08bb, []int{24, 1}
}
func (m *QueueAllInfoResponse_QueueInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueAllInfoResponse_QueueInfo.Unmarshal(m, b)
}
func (m *QueueAllInfoResponse_QueueInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueAllInfoResponse_QueueInfo.Marshal(b, m, deterministic)
}
func (dst *QueueAllInfoResponse_QueueInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueAllInfoResponse_QueueInfo.Merge(dst, src)
}
func (m *QueueAllInfoResponse_QueueInfo) XXX_Size() int {
	return xxx_messageInfo_QueueAllInfoResponse_QueueInfo.Size(m)
}
func (m *QueueAllInfoResponse_QueueInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueAllInfoResponse_QueueInfo.DiscardUnknown(m)
}

var xxx_messageInfo_QueueAllInfoResponse_QueueInfo proto.InternalMessageInfo

func (m *QueueAllInfoResponse_QueueInfo) GetShards() map[string]*QueueAllInfoResponse_ShardInfo {
	if m != nil {
		return m.Shards
	}
	return nil
}

func init() {
	proto.RegisterType((*PollRequest)(nil), "conductor.grpc.tasks.PollRequest")
	proto.RegisterType((*PollResponse)(nil), "conductor.grpc.tasks.PollResponse")
	proto.RegisterType((*BatchPollRequest)(nil), "conductor.grpc.tasks.BatchPollRequest")
	proto.RegisterType((*TasksInProgressRequest)(nil), "conductor.grpc.tasks.TasksInProgressRequest")
	proto.RegisterType((*TasksInProgressResponse)(nil), "conductor.grpc.tasks.TasksInProgressResponse")
	proto.RegisterType((*PendingTaskRequest)(nil), "conductor.grpc.tasks.PendingTaskRequest")
	proto.RegisterType((*PendingTaskResponse)(nil), "conductor.grpc.tasks.PendingTaskResponse")
	proto.RegisterType((*UpdateTaskRequest)(nil), "conductor.grpc.tasks.UpdateTaskRequest")
	proto.RegisterType((*UpdateTaskResponse)(nil), "conductor.grpc.tasks.UpdateTaskResponse")
	proto.RegisterType((*AckTaskRequest)(nil), "conductor.grpc.tasks.AckTaskRequest")
	proto.RegisterType((*AckTaskResponse)(nil), "conductor.grpc.tasks.AckTaskResponse")
	proto.RegisterType((*AddLogRequest)(nil), "conductor.grpc.tasks.AddLogRequest")
	proto.RegisterType((*AddLogResponse)(nil), "conductor.grpc.tasks.AddLogResponse")
	proto.RegisterType((*GetTaskLogsRequest)(nil), "conductor.grpc.tasks.GetTaskLogsRequest")
	proto.RegisterType((*GetTaskLogsResponse)(nil), "conductor.grpc.tasks.GetTaskLogsResponse")
	proto.RegisterType((*GetTaskRequest)(nil), "conductor.grpc.tasks.GetTaskRequest")
	proto.RegisterType((*GetTaskResponse)(nil), "conductor.grpc.tasks.GetTaskResponse")
	proto.RegisterType((*RemoveTaskRequest)(nil), "conductor.grpc.tasks.RemoveTaskRequest")
	proto.RegisterType((*RemoveTaskResponse)(nil), "conductor.grpc.tasks.RemoveTaskResponse")
	proto.RegisterType((*QueueSizesRequest)(nil), "conductor.grpc.tasks.QueueSizesRequest")
	proto.RegisterType((*QueueSizesResponse)(nil), "conductor.grpc.tasks.QueueSizesResponse")
	proto.RegisterMapType((map[string]int32)(nil), "conductor.grpc.tasks.QueueSizesResponse.QueueForTaskEntry")
	proto.RegisterType((*QueueInfoRequest)(nil), "conductor.grpc.tasks.QueueInfoRequest")
	proto.RegisterType((*QueueInfoResponse)(nil), "conductor.grpc.tasks.QueueInfoResponse")
	proto.RegisterMapType((map[string]int64)(nil), "conductor.grpc.tasks.QueueInfoResponse.QueuesEntry")
	proto.RegisterType((*QueueAllInfoRequest)(nil), "conductor.grpc.tasks.QueueAllInfoRequest")
	proto.RegisterType((*QueueAllInfoResponse)(nil), "conductor.grpc.tasks.QueueAllInfoResponse")
	proto.RegisterMapType((map[string]*QueueAllInfoResponse_QueueInfo)(nil), "conductor.grpc.tasks.QueueAllInfoResponse.QueuesEntry")
	proto.RegisterType((*QueueAllInfoResponse_ShardInfo)(nil), "conductor.grpc.tasks.QueueAllInfoResponse.ShardInfo")
	proto.RegisterType((*QueueAllInfoResponse_QueueInfo)(nil), "conductor.grpc.tasks.QueueAllInfoResponse.QueueInfo")
	proto.RegisterMapType((map[string]*QueueAllInfoResponse_ShardInfo)(nil), "conductor.grpc.tasks.QueueAllInfoResponse.QueueInfo.ShardsEntry")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskServiceClient is the client API for TaskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskServiceClient interface {
	// GET /poll/{tasktype}
	Poll(ctx context.Context, in *PollRequest, opts ...grpc.CallOption) (*PollResponse, error)
	// /poll/batch/{tasktype}
	BatchPoll(ctx context.Context, in *BatchPollRequest, opts ...grpc.CallOption) (TaskService_BatchPollClient, error)
	// GET /in_progress/{tasktype}
	GetTasksInProgress(ctx context.Context, in *TasksInProgressRequest, opts ...grpc.CallOption) (*TasksInProgressResponse, error)
	// GET /in_progress/{workflowId}/{taskRefName}
	GetPendingTaskForWorkflow(ctx context.Context, in *PendingTaskRequest, opts ...grpc.CallOption) (*PendingTaskResponse, error)
	// POST /
	UpdateTask(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*UpdateTaskResponse, error)
	// POST /{taskId}/ack
	AckTask(ctx context.Context, in *AckTaskRequest, opts ...grpc.CallOption) (*AckTaskResponse, error)
	// POST /{taskId}/log
	AddLog(ctx context.Context, in *AddLogRequest, opts ...grpc.CallOption) (*AddLogResponse, error)
	// GET {taskId}/log
	GetTaskLogs(ctx context.Context, in *GetTaskLogsRequest, opts ...grpc.CallOption) (*GetTaskLogsResponse, error)
	// GET /{taskId}
	GetTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*GetTaskResponse, error)
	// DELETE /queue/{taskType}/{taskId}
	RemoveTaskFromQueue(ctx context.Context, in *RemoveTaskRequest, opts ...grpc.CallOption) (*RemoveTaskResponse, error)
	// GET /queue/sizes
	GetQueueSizesForTasks(ctx context.Context, in *QueueSizesRequest, opts ...grpc.CallOption) (*QueueSizesResponse, error)
	// GET /queue/all
	GetQueueInfo(ctx context.Context, in *QueueInfoRequest, opts ...grpc.CallOption) (*QueueInfoResponse, error)
	// GET /queue/all/verbose
	GetQueueAllInfo(ctx context.Context, in *QueueAllInfoRequest, opts ...grpc.CallOption) (*QueueAllInfoResponse, error)
}

type taskServiceClient struct {
	cc *grpc.ClientConn
}

func NewTaskServiceClient(cc *grpc.ClientConn) TaskServiceClient {
	return &taskServiceClient{cc}
}

func (c *taskServiceClient) Poll(ctx context.Context, in *PollRequest, opts ...grpc.CallOption) (*PollResponse, error) {
	out := new(PollResponse)
	err := c.cc.Invoke(ctx, "/conductor.grpc.tasks.TaskService/Poll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) BatchPoll(ctx context.Context, in *BatchPollRequest, opts ...grpc.CallOption) (TaskService_BatchPollClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TaskService_serviceDesc.Streams[0], "/conductor.grpc.tasks.TaskService/BatchPoll", opts...)
	if err != nil {
		return nil, err
	}
	x := &taskServiceBatchPollClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TaskService_BatchPollClient interface {
	Recv() (*model.Task, error)
	grpc.ClientStream
}

type taskServiceBatchPollClient struct {
	grpc.ClientStream
}

func (x *taskServiceBatchPollClient) Recv() (*model.Task, error) {
	m := new(model.Task)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *taskServiceClient) GetTasksInProgress(ctx context.Context, in *TasksInProgressRequest, opts ...grpc.CallOption) (*TasksInProgressResponse, error) {
	out := new(TasksInProgressResponse)
	err := c.cc.Invoke(ctx, "/conductor.grpc.tasks.TaskService/GetTasksInProgress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) GetPendingTaskForWorkflow(ctx context.Context, in *PendingTaskRequest, opts ...grpc.CallOption) (*PendingTaskResponse, error) {
	out := new(PendingTaskResponse)
	err := c.cc.Invoke(ctx, "/conductor.grpc.tasks.TaskService/GetPendingTaskForWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) UpdateTask(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*UpdateTaskResponse, error) {
	out := new(UpdateTaskResponse)
	err := c.cc.Invoke(ctx, "/conductor.grpc.tasks.TaskService/UpdateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) AckTask(ctx context.Context, in *AckTaskRequest, opts ...grpc.CallOption) (*AckTaskResponse, error) {
	out := new(AckTaskResponse)
	err := c.cc.Invoke(ctx, "/conductor.grpc.tasks.TaskService/AckTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) AddLog(ctx context.Context, in *AddLogRequest, opts ...grpc.CallOption) (*AddLogResponse, error) {
	out := new(AddLogResponse)
	err := c.cc.Invoke(ctx, "/conductor.grpc.tasks.TaskService/AddLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) GetTaskLogs(ctx context.Context, in *GetTaskLogsRequest, opts ...grpc.CallOption) (*GetTaskLogsResponse, error) {
	out := new(GetTaskLogsResponse)
	err := c.cc.Invoke(ctx, "/conductor.grpc.tasks.TaskService/GetTaskLogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) GetTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*GetTaskResponse, error) {
	out := new(GetTaskResponse)
	err := c.cc.Invoke(ctx, "/conductor.grpc.tasks.TaskService/GetTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) RemoveTaskFromQueue(ctx context.Context, in *RemoveTaskRequest, opts ...grpc.CallOption) (*RemoveTaskResponse, error) {
	out := new(RemoveTaskResponse)
	err := c.cc.Invoke(ctx, "/conductor.grpc.tasks.TaskService/RemoveTaskFromQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) GetQueueSizesForTasks(ctx context.Context, in *QueueSizesRequest, opts ...grpc.CallOption) (*QueueSizesResponse, error) {
	out := new(QueueSizesResponse)
	err := c.cc.Invoke(ctx, "/conductor.grpc.tasks.TaskService/GetQueueSizesForTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) GetQueueInfo(ctx context.Context, in *QueueInfoRequest, opts ...grpc.CallOption) (*QueueInfoResponse, error) {
	out := new(QueueInfoResponse)
	err := c.cc.Invoke(ctx, "/conductor.grpc.tasks.TaskService/GetQueueInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) GetQueueAllInfo(ctx context.Context, in *QueueAllInfoRequest, opts ...grpc.CallOption) (*QueueAllInfoResponse, error) {
	out := new(QueueAllInfoResponse)
	err := c.cc.Invoke(ctx, "/conductor.grpc.tasks.TaskService/GetQueueAllInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskServiceServer is the server API for TaskService service.
type TaskServiceServer interface {
	// GET /poll/{tasktype}
	Poll(context.Context, *PollRequest) (*PollResponse, error)
	// /poll/batch/{tasktype}
	BatchPoll(*BatchPollRequest, TaskService_BatchPollServer) error
	// GET /in_progress/{tasktype}
	GetTasksInProgress(context.Context, *TasksInProgressRequest) (*TasksInProgressResponse, error)
	// GET /in_progress/{workflowId}/{taskRefName}
	GetPendingTaskForWorkflow(context.Context, *PendingTaskRequest) (*PendingTaskResponse, error)
	// POST /
	UpdateTask(context.Context, *UpdateTaskRequest) (*UpdateTaskResponse, error)
	// POST /{taskId}/ack
	AckTask(context.Context, *AckTaskRequest) (*AckTaskResponse, error)
	// POST /{taskId}/log
	AddLog(context.Context, *AddLogRequest) (*AddLogResponse, error)
	// GET {taskId}/log
	GetTaskLogs(context.Context, *GetTaskLogsRequest) (*GetTaskLogsResponse, error)
	// GET /{taskId}
	GetTask(context.Context, *GetTaskRequest) (*GetTaskResponse, error)
	// DELETE /queue/{taskType}/{taskId}
	RemoveTaskFromQueue(context.Context, *RemoveTaskRequest) (*RemoveTaskResponse, error)
	// GET /queue/sizes
	GetQueueSizesForTasks(context.Context, *QueueSizesRequest) (*QueueSizesResponse, error)
	// GET /queue/all
	GetQueueInfo(context.Context, *QueueInfoRequest) (*QueueInfoResponse, error)
	// GET /queue/all/verbose
	GetQueueAllInfo(context.Context, *QueueAllInfoRequest) (*QueueAllInfoResponse, error)
}

func RegisterTaskServiceServer(s *grpc.Server, srv TaskServiceServer) {
	s.RegisterService(&_TaskService_serviceDesc, srv)
}

func _TaskService_Poll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PollRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).Poll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.grpc.tasks.TaskService/Poll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).Poll(ctx, req.(*PollRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_BatchPoll_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BatchPollRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TaskServiceServer).BatchPoll(m, &taskServiceBatchPollServer{stream})
}

type TaskService_BatchPollServer interface {
	Send(*model.Task) error
	grpc.ServerStream
}

type taskServiceBatchPollServer struct {
	grpc.ServerStream
}

func (x *taskServiceBatchPollServer) Send(m *model.Task) error {
	return x.ServerStream.SendMsg(m)
}

func _TaskService_GetTasksInProgress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TasksInProgressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).GetTasksInProgress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.grpc.tasks.TaskService/GetTasksInProgress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).GetTasksInProgress(ctx, req.(*TasksInProgressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_GetPendingTaskForWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PendingTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).GetPendingTaskForWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.grpc.tasks.TaskService/GetPendingTaskForWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).GetPendingTaskForWorkflow(ctx, req.(*PendingTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_UpdateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).UpdateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.grpc.tasks.TaskService/UpdateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).UpdateTask(ctx, req.(*UpdateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_AckTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AckTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).AckTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.grpc.tasks.TaskService/AckTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).AckTask(ctx, req.(*AckTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_AddLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).AddLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.grpc.tasks.TaskService/AddLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).AddLog(ctx, req.(*AddLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_GetTaskLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskLogsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).GetTaskLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.grpc.tasks.TaskService/GetTaskLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).GetTaskLogs(ctx, req.(*GetTaskLogsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_GetTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).GetTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.grpc.tasks.TaskService/GetTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).GetTask(ctx, req.(*GetTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_RemoveTaskFromQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).RemoveTaskFromQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.grpc.tasks.TaskService/RemoveTaskFromQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).RemoveTaskFromQueue(ctx, req.(*RemoveTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_GetQueueSizesForTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueueSizesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).GetQueueSizesForTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.grpc.tasks.TaskService/GetQueueSizesForTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).GetQueueSizesForTasks(ctx, req.(*QueueSizesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_GetQueueInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueueInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).GetQueueInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.grpc.tasks.TaskService/GetQueueInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).GetQueueInfo(ctx, req.(*QueueInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_GetQueueAllInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueueAllInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).GetQueueAllInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.grpc.tasks.TaskService/GetQueueAllInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).GetQueueAllInfo(ctx, req.(*QueueAllInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "conductor.grpc.tasks.TaskService",
	HandlerType: (*TaskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Poll",
			Handler:    _TaskService_Poll_Handler,
		},
		{
			MethodName: "GetTasksInProgress",
			Handler:    _TaskService_GetTasksInProgress_Handler,
		},
		{
			MethodName: "GetPendingTaskForWorkflow",
			Handler:    _TaskService_GetPendingTaskForWorkflow_Handler,
		},
		{
			MethodName: "UpdateTask",
			Handler:    _TaskService_UpdateTask_Handler,
		},
		{
			MethodName: "AckTask",
			Handler:    _TaskService_AckTask_Handler,
		},
		{
			MethodName: "AddLog",
			Handler:    _TaskService_AddLog_Handler,
		},
		{
			MethodName: "GetTaskLogs",
			Handler:    _TaskService_GetTaskLogs_Handler,
		},
		{
			MethodName: "GetTask",
			Handler:    _TaskService_GetTask_Handler,
		},
		{
			MethodName: "RemoveTaskFromQueue",
			Handler:    _TaskService_RemoveTaskFromQueue_Handler,
		},
		{
			MethodName: "GetQueueSizesForTasks",
			Handler:    _TaskService_GetQueueSizesForTasks_Handler,
		},
		{
			MethodName: "GetQueueInfo",
			Handler:    _TaskService_GetQueueInfo_Handler,
		},
		{
			MethodName: "GetQueueAllInfo",
			Handler:    _TaskService_GetQueueAllInfo_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "BatchPoll",
			Handler:       _TaskService_BatchPoll_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "grpc/task_service.proto",
}

func init() {
	proto.RegisterFile("grpc/task_service.proto", fileDescriptor_task_service_2cd893b942ad08bb)
}

var fileDescriptor_task_service_2cd893b942ad08bb = []byte{
	// 1114 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xdd, 0x72, 0xdb, 0x54,
	0x10, 0x1e, 0xc5, 0x89, 0x53, 0xaf, 0x93, 0xd4, 0x39, 0xf9, 0x33, 0x2a, 0x0c, 0x41, 0x2d, 0x6d,
	0x02, 0x54, 0xe9, 0x24, 0x0c, 0xd0, 0x0c, 0x33, 0x6d, 0x32, 0x43, 0x82, 0x69, 0xe8, 0x04, 0xa5,
	0x94, 0x9f, 0x1b, 0xa3, 0x48, 0xc7, 0xb2, 0xb0, 0xac, 0xe3, 0x48, 0x47, 0x69, 0xd2, 0xe7, 0xe0,
	0x8e, 0x07, 0xe1, 0x4d, 0x78, 0x07, 0x5e, 0x81, 0x2b, 0xe6, 0xfc, 0x48, 0x3a, 0x8e, 0x25, 0xdb,
	0x19, 0xa6, 0x77, 0x3a, 0xab, 0xdd, 0xfd, 0xbe, 0x5d, 0xad, 0xf7, 0x3b, 0x86, 0x0d, 0x2f, 0x1a,
	0x38, 0x3b, 0xd4, 0x8e, 0x7b, 0xed, 0x18, 0x47, 0x97, 0xbe, 0x83, 0xcd, 0x41, 0x44, 0x28, 0x41,
	0xab, 0x0e, 0x09, 0xdd, 0xc4, 0xa1, 0x24, 0x32, 0x99, 0x8b, 0xc9, 0x5c, 0x62, 0x7d, 0xa3, 0x4f,
	0x5c, 0x1c, 0x70, 0x7f, 0x7c, 0x85, 0x9d, 0x80, 0x78, 0xc2, 0x5d, 0x5f, 0xcf, 0x5f, 0x44, 0x38,
	0x4e, 0x02, 0x2a, 0xed, 0x8d, 0xdc, 0x2e, 0x2c, 0x46, 0x1b, 0xea, 0xa7, 0x24, 0x08, 0x2c, 0x7c,
	0x91, 0xe0, 0x98, 0xa2, 0x7b, 0x50, 0xe3, 0xe8, 0xf4, 0x7a, 0x80, 0x9b, 0xda, 0xa6, 0xb6, 0x55,
	0xb3, 0xee, 0x30, 0xc3, 0xab, 0xeb, 0x01, 0x66, 0x2f, 0xdf, 0x90, 0xa8, 0x87, 0xa3, 0xb6, 0xef,
	0x36, 0x67, 0xc4, 0x4b, 0x61, 0x68, 0xb9, 0x68, 0x1d, 0xaa, 0x2e, 0xe9, 0xdb, 0x7e, 0xd8, 0xac,
	0xf0, 0x37, 0xf2, 0x64, 0x3c, 0x85, 0x05, 0x01, 0x10, 0x0f, 0x48, 0x18, 0x63, 0xb4, 0x0d, 0xb3,
	0x2c, 0x21, 0x4f, 0x5e, 0xdf, 0x5d, 0x33, 0xf3, 0xc2, 0x38, 0x21, 0xf3, 0x95, 0x1d, 0xf7, 0x2c,
	0xee, 0x62, 0xfc, 0xa1, 0x41, 0xe3, 0xd0, 0xa6, 0x4e, 0xf7, 0x9d, 0x32, 0x44, 0xab, 0x30, 0xe7,
	0x90, 0x24, 0xa4, 0xcd, 0xd9, 0x4d, 0x6d, 0x6b, 0xce, 0x12, 0x07, 0xd4, 0x84, 0x79, 0xea, 0xf7,
	0x31, 0x49, 0x68, 0x73, 0x8e, 0xdb, 0xd3, 0xa3, 0xd1, 0x85, 0x75, 0x46, 0x32, 0x6e, 0x85, 0xa7,
	0x11, 0xf1, 0x22, 0x1c, 0xc7, 0xd3, 0x72, 0x8b, 0xa9, 0x1d, 0xd1, 0x76, 0x0f, 0x5f, 0xa7, 0xdc,
	0xb8, 0xe1, 0x05, 0xbe, 0xce, 0x39, 0x54, 0x14, 0x0e, 0xc6, 0x11, 0x6c, 0x8c, 0x20, 0xc9, 0x36,
	0x7e, 0x0a, 0x73, 0x7c, 0x06, 0x9a, 0xda, 0x66, 0xa5, 0xbc, 0x8f, 0xc2, 0xc7, 0xf8, 0x05, 0xd0,
	0x29, 0x0e, 0x5d, 0x3f, 0xf4, 0xb8, 0x55, 0xb2, 0xfd, 0x10, 0xea, 0xac, 0x37, 0x9d, 0x80, 0xbc,
	0x61, 0xed, 0x12, 0x7c, 0x21, 0x35, 0xb5, 0x5c, 0x64, 0xc0, 0x22, 0x2f, 0x27, 0xc2, 0x9d, 0x76,
	0x68, 0xf7, 0xb1, 0x64, 0x5d, 0xa7, 0x3c, 0x49, 0xe7, 0xa5, 0xdd, 0xc7, 0xc6, 0x73, 0x58, 0x19,
	0x4a, 0x7d, 0xfb, 0xaf, 0xfc, 0x2d, 0x2c, 0xff, 0x38, 0x70, 0x6d, 0x8a, 0x55, 0x6e, 0x7b, 0x50,
	0x15, 0x83, 0x2b, 0x33, 0xdc, 0x2b, 0xce, 0xc0, 0x5d, 0x2c, 0xe9, 0x6a, 0x3c, 0x06, 0xa4, 0x66,
	0x92, 0x54, 0x36, 0x60, 0x9e, 0x57, 0x91, 0x95, 0x58, 0x65, 0xc7, 0x96, 0x6b, 0x1c, 0xc1, 0xd2,
	0x81, 0xd3, 0x53, 0x51, 0xcb, 0x5c, 0xc7, 0xce, 0x95, 0x71, 0x1f, 0xee, 0x66, 0x79, 0x24, 0x66,
	0x03, 0x2a, 0xb6, 0x23, 0xaa, 0xbf, 0x63, 0xb1, 0x47, 0x63, 0x1f, 0x16, 0x0f, 0x5c, 0xf7, 0x84,
	0x78, 0x13, 0xb1, 0x1a, 0x50, 0x09, 0x88, 0x27, 0x51, 0xd8, 0xa3, 0xd1, 0x80, 0xa5, 0x34, 0x56,
	0xe4, 0x67, 0x95, 0x1e, 0x63, 0xca, 0x20, 0x4f, 0x88, 0x17, 0x4f, 0x4a, 0x69, 0x1c, 0xc3, 0xca,
	0x90, 0xbb, 0x64, 0xf9, 0x04, 0x66, 0x03, 0xe2, 0xa5, 0x23, 0xf4, 0x7e, 0x61, 0x8b, 0xbf, 0xb9,
	0xc2, 0x0e, 0x43, 0xe6, 0x9e, 0xc6, 0x36, 0x2c, 0xc9, 0x44, 0x13, 0x31, 0xbf, 0x86, 0xbb, 0x99,
	0xeb, 0xed, 0x87, 0xa2, 0x05, 0xcb, 0x16, 0xee, 0x93, 0xcb, 0xa1, 0xa1, 0x18, 0xfb, 0xf3, 0x52,
	0x88, 0xcc, 0x0c, 0x11, 0x59, 0x05, 0xa4, 0xa6, 0x92, 0x1d, 0xdc, 0x85, 0xe5, 0x1f, 0x12, 0x9c,
	0xe0, 0x33, 0xff, 0x2d, 0xce, 0x1a, 0xf8, 0x01, 0x40, 0x06, 0x20, 0xda, 0x52, 0xb3, 0x6a, 0x29,
	0x42, 0x6c, 0xfc, 0xa5, 0x01, 0x52, 0x83, 0x64, 0x59, 0xbf, 0xc1, 0xd2, 0x05, 0xb3, 0xb6, 0x3b,
	0x24, 0x6a, 0xcb, 0x02, 0x59, 0x43, 0xf7, 0xcd, 0xa2, 0xa5, 0x6d, 0x8e, 0x66, 0x10, 0xa6, 0x23,
	0x12, 0xf1, 0x86, 0x87, 0x34, 0xba, 0xb6, 0x16, 0x2e, 0x14, 0x93, 0xfe, 0x4c, 0x92, 0x55, 0x5d,
	0xd8, 0x9c, 0xb0, 0x4d, 0x22, 0xfa, 0xc0, 0x1e, 0xd9, 0x12, 0xb9, 0xb4, 0x83, 0x44, 0xfc, 0x4e,
	0xe7, 0x2c, 0x71, 0xd8, 0x9f, 0xf9, 0x4a, 0x33, 0x10, 0x34, 0x78, 0x82, 0x56, 0xd8, 0x21, 0xb2,
	0x58, 0xe3, 0x4f, 0x4d, 0x66, 0x15, 0x46, 0x59, 0xcc, 0x0b, 0xa8, 0x72, 0xe8, 0x74, 0x2a, 0xf6,
	0xc6, 0x14, 0xa1, 0x06, 0x0a, 0x4b, 0x2c, 0xd8, 0xcb, 0x14, 0xfa, 0x53, 0xa8, 0x2b, 0xe6, 0x49,
	0x8c, 0x2b, 0x2a, 0xe3, 0x35, 0x58, 0xe1, 0xa1, 0x07, 0x41, 0xa0, 0x92, 0xfe, 0xa7, 0x02, 0xab,
	0xc3, 0x76, 0xc9, 0xfb, 0xe5, 0x0d, 0xde, 0x5f, 0x8c, 0xe1, 0x7d, 0x23, 0xb6, 0x90, 0xfa, 0x97,
	0x50, 0x3b, 0xeb, 0xda, 0x91, 0xcb, 0x1c, 0x11, 0x82, 0xd9, 0xd8, 0x7f, 0x2b, 0x66, 0xae, 0x62,
	0xf1, 0x67, 0xa6, 0x26, 0x89, 0xed, 0xf4, 0xb0, 0x2b, 0xb9, 0xcb, 0x93, 0xfe, 0xb7, 0x06, 0xb5,
	0xac, 0x3b, 0xe8, 0x67, 0xa8, 0xc6, 0x2c, 0x4d, 0x4a, 0xeb, 0xf9, 0x6d, 0x69, 0x31, 0x8b, 0xc9,
	0x99, 0xa4, 0x04, 0x45, 0x3e, 0x9d, 0x40, 0x5d, 0x31, 0x17, 0xf4, 0xf6, 0x3b, 0xb5, 0xb7, 0xf5,
	0xdd, 0xcf, 0x6f, 0x81, 0x9c, 0x55, 0xae, 0x7c, 0x11, 0x06, 0x38, 0xfe, 0x63, 0xfe, 0x0f, 0xc0,
	0x7c, 0x9c, 0x72, 0xc0, 0xdd, 0x7f, 0x6b, 0x50, 0x67, 0xe3, 0x7e, 0x26, 0x6e, 0x42, 0xe8, 0x7b,
	0x98, 0x65, 0x17, 0x01, 0xf4, 0x51, 0x71, 0x62, 0xe5, 0x92, 0xa0, 0x1b, 0xe3, 0x5c, 0xe4, 0xc4,
	0x9c, 0x40, 0x2d, 0xbb, 0x5c, 0xa0, 0x87, 0xc5, 0x01, 0x37, 0x6f, 0x1f, 0x7a, 0xf1, 0xd2, 0x7a,
	0xa2, 0xa1, 0x8b, 0x6c, 0x23, 0x2b, 0x6a, 0x8d, 0x3e, 0x2b, 0x4e, 0x5b, 0x7c, 0x7d, 0xd0, 0x1f,
	0x4f, 0xe9, 0x2d, 0x0b, 0x18, 0xc0, 0x7b, 0xc7, 0x98, 0x2a, 0xea, 0x7b, 0x44, 0xa2, 0x9f, 0xa4,
	0x7a, 0xa3, 0xad, 0x92, 0x0e, 0x8c, 0x5c, 0x03, 0xf4, 0xed, 0x29, 0x3c, 0x25, 0x62, 0x1b, 0x20,
	0x17, 0x58, 0xf4, 0xa8, 0x38, 0x70, 0x44, 0xcc, 0xf5, 0xad, 0xc9, 0x8e, 0x12, 0xe0, 0x35, 0xcc,
	0x4b, 0x29, 0x45, 0x0f, 0x8a, 0x83, 0x86, 0x15, 0x5b, 0xff, 0x78, 0x82, 0x97, 0xcc, 0x7b, 0x06,
	0x55, 0xa1, 0xa0, 0xe8, 0x7e, 0x49, 0x80, 0xaa, 0xcd, 0xfa, 0x83, 0xf1, 0x4e, 0x32, 0xe9, 0x39,
	0xd4, 0x15, 0x55, 0x2d, 0xeb, 0xf8, 0xa8, 0x4e, 0x97, 0x75, 0xbc, 0x48, 0xa2, 0x5f, 0xc3, 0xbc,
	0x34, 0x97, 0x35, 0x64, 0x58, 0x8f, 0xcb, 0x1a, 0x72, 0x53, 0x8a, 0xbb, 0xb0, 0x92, 0x8b, 0xe2,
	0x51, 0x44, 0xfa, 0xfc, 0x17, 0x58, 0xf6, 0x49, 0x47, 0xa4, 0xb8, 0xec, 0x93, 0x8e, 0x0a, 0x2d,
	0xfa, 0x1d, 0xd6, 0x8e, 0x31, 0xcd, 0x45, 0x4f, 0x6a, 0x58, 0x5c, 0x86, 0x35, 0xa2, 0xca, 0x65,
	0x58, 0x05, 0x4a, 0xdc, 0x86, 0x85, 0x14, 0x8b, 0x6f, 0xdf, 0x87, 0x13, 0xc5, 0x4b, 0x20, 0x3c,
	0x9a, 0x52, 0xe4, 0x50, 0x97, 0x5f, 0x6a, 0xd4, 0x15, 0x86, 0xb6, 0xa7, 0x59, 0x73, 0x02, 0xe6,
	0x93, 0xe9, 0x37, 0xe2, 0x61, 0x00, 0xba, 0x43, 0xfa, 0x66, 0x88, 0x69, 0x27, 0xf0, 0xaf, 0x6e,
	0x04, 0x1e, 0x2e, 0x2a, 0x7b, 0xf1, 0xf4, 0xfc, 0xd7, 0x67, 0x9e, 0x4f, 0xbb, 0xc9, 0xb9, 0xe9,
	0x90, 0xfe, 0x8e, 0x8c, 0xd8, 0xc9, 0x22, 0x76, 0x9c, 0xc0, 0xc7, 0x21, 0xdd, 0xf1, 0x08, 0xff,
	0x73, 0x99, 0xdb, 0xb3, 0xff, 0x9a, 0xf1, 0x79, 0x95, 0xef, 0xb2, 0xbd, 0xff, 0x02, 0x00, 0x00,
	0xff, 0xff, 0xc5, 0xda, 0xa9, 0x5e, 0x80, 0x0e, 0x00, 0x00,
}
