version: '2.3'

services:

  conductor-server:
    environment:
      - CONFIG_PROP=config-mysql.properties
    image: conductor:server
    build:
      context: ../
      dockerfile: docker/server/Dockerfile
    networks:
      - internal
    ports:
      - 8080:8080
      - 8090:8090
    links:
      - elasticsearch:es
      - redis:rs
    depends_on:
      elasticsearch:
        condition: service_healthy
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  conductor-ui:
    environment:
      - WF_SERVER=http://conductor-server:8080
    image: conductor:ui
    build:
      context: ../
      dockerfile: docker/ui/Dockerfile
    networks:
      - internal
    ports:
      - 5000:5000
    depends_on:
      - conductor-server

  mysql:
    image: arm64v8/mysql:oracle
    environment:
      MYSQL_ROOT_PASSWORD: 12345
      MYSQL_DATABASE: conductor
      MYSQL_USER: conductor
      MYSQL_PASSWORD: conductor
    volumes:
      - type: volume
        source: conductor_mysql
        target: /var/lib/mysql
    networks:
      - internal
    ports:
      - 3306:3306
    healthcheck:
      test: timeout 5 bash -c 'cat < /dev/null > /dev/tcp/localhost/3306'
      interval: 5s
      timeout: 5s
      retries: 12

  redis:
    image: redis:6.2.3-alpine
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - internal
    ports:
      - 6379:6379
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]

  elasticsearch:
    image: elasticsearch:7.17.6
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx1024m"
      - transport.host=0.0.0.0
      - discovery.type=single-node
      - xpack.security.enabled=false
    networks:
      - internal
    ports:
      - 9200:9200
      - 9300:9300
    healthcheck:
      test: timeout 5 bash -c 'cat < /dev/null > /dev/tcp/localhost/9300'
      interval: 5s
      timeout: 5s
      retries: 12
    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "3"

  prometheus:
    image: prom/prometheus:v2.36.2
    volumes:
      - ./apps/prometheus/configs/prometheus.yaml:/etc/prometheus/prometheus.yaml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    external_links:
      - conductor-server:conductor-server
    networks:
      - internal
    restart: always

  grafana:
    image: grafana/grafana:6.7.2
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - 3000:3000

volumes:
  conductor_mysql:
  prometheus_data: { }
  grafana_data: { }

networks:
  internal:
