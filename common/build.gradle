buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.vmg.protogen:protogen-codegen:${revProtogenCodegen}"
        classpath "javax.annotation:javax.annotation-api:1.3.2"
    }
}

dependencies {
    compileOnly 'org.springframework.boot:spring-boot-starter'
    compileOnly 'org.springframework.boot:spring-boot-starter-validation'

    compileOnly "org.springdoc:springdoc-openapi-ui:${revOpenapi}"

    implementation "org.apache.commons:commons-lang3"

    implementation "com.github.rholder:guava-retrying:${revGuavaRetrying}"

    implementation "org.apache.bval:bval-jsr:${revBval}"

    implementation "com.google.protobuf:protobuf-java:${revProtoBuf}"
    implementation "com.github.vmg.protogen:protogen-annotations:${revProtogenAnnotations}"

    implementation "com.fasterxml.jackson.core:jackson-databind"
    implementation "com.fasterxml.jackson.core:jackson-core"

    testImplementation 'org.springframework.boot:spring-boot-starter-validation'
}

/*
 *  Copyright 2021 Netflix, Inc.
 *  <p>
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 *  the License. You may obtain a copy of the License at
 *  <p>
 *  http://www.apache.org/licenses/LICENSE-2.0
 *  <p>
 *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 *  an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 *  specific language governing permissions and limitations under the License.
 */

import com.github.vmg.protogen.ProtoGenTask

task protogen(dependsOn: jar, type: ProtoGenTask) {
    protoPackage = "conductor.proto"
    javaPackage = "com.netflix.conductor.proto"
    goPackage = "github.com/netflix/conductor/client/gogrpc/conductor/model"

    protosDir = new File("${rootDir}/grpc/src/main/proto")
    mapperDir = new File("${rootDir}/grpc/src/main/java/com/netflix/conductor/grpc")
    mapperPackage = "com.netflix.conductor.grpc";

    sourceJar = jar.archivePath
    sourcePackage = "com.netflix.conductor.common"
    outputs.dir protosDir
    outputs.dir mapperDir
}
