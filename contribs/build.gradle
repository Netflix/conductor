/*
 *  Copyright 2021 Netflix, Inc.
 *  <p>
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 *  the License. You may obtain a copy of the License at
 *  <p>
 *  http://www.apache.org/licenses/LICENSE-2.0
 *  <p>
 *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 *  an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 *  specific language governing permissions and limitations under the License.
 */

dependencies {
    implementation project(':conductor-common')
    implementation project(':conductor-core')
    compileOnly 'org.springframework.boot:spring-boot-starter'
    compileOnly 'org.springframework.boot:spring-boot-starter-web'

    implementation "com.amazonaws:aws-java-sdk-s3:${revAwsSdk}"
    implementation "com.amazonaws:aws-java-sdk-sqs:${revAwsSdk}"

    implementation "org.apache.commons:commons-lang3:"

    implementation "net.thisptr:jackson-jq:${revJq}"
    // SBMTODO: remove guava dep
    implementation "com.google.guava:guava:${revGuava}"

    implementation "javax.ws.rs:jsr311-api:${revJsr311Api}"

    implementation "org.apache.kafka:kafka-clients:${revKafka}"

    implementation "com.rabbitmq:amqp-client:${revAmqpClient}"

    implementation "io.nats:java-nats-streaming:${revNatsStreaming}"

    implementation "io.reactivex:rxjava:${revRxJava}"

    implementation "com.netflix.spectator:spectator-reg-metrics3:${revSpectator}"
    implementation "com.netflix.spectator:spectator-reg-micrometer:${revSpectator}"
	implementation "io.prometheus:simpleclient:${revPrometheus}"
	implementation "io.micrometer:micrometer-registry-prometheus:${revMicrometer}"

    testImplementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation "org.testcontainers:mockserver:${revTestContainer}"
    testImplementation "org.mock-server:mockserver-client-java:${revMockServerClient}"

    testImplementation project(':conductor-common').sourceSets.test.output
}
