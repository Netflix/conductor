buildscript {
    dependencies {
        classpath "org.akhikhl.gretty:gretty:1.2.4"
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

configurations.all {
    resolutionStrategy {
        force 'com.fasterxml.jackson.core:jackson-core:2.7.5'
    }
}

apply plugin: 'war'
apply plugin: "org.akhikhl.gretty"

dependencies {
 
    //Conductor
    compile project(':conductor-core')
    compile project(':conductor-jersey')
    compile project(':conductor-redis-persistence')
    compile project(':conductor-mysql-persistence')
    compile project(':conductor-contribs')

    //Jetty
    compile "org.eclipse.jetty:jetty-server:${revJetteyServer}"
    compile "org.eclipse.jetty:jetty-servlet:${revJettyServlet}"

    //Guice
    compile "com.sun.jersey.contribs:jersey-guice:${revJerseyGuice}"
    compile "com.google.inject:guice:${revGuice}"
    compile "com.google.inject.extensions:guice-servlet:${revGuiceServlet}"

    //Swagger
    compile "io.swagger:swagger-jersey-jaxrs:${revSwagger}"

    //In memory
    compile "org.rarefiedredis.redis:redis-java:${revRarefiedRedis}"
}

shadowJar {
   mergeServiceFiles()
   configurations = [project.configurations.compile]
   manifest {
       attributes 'Description': 'Self contained Conductor server jar'
       attributes 'Main-Class' : 'com.netflix.conductor.server.Main'
   }
}
publishing {
  publications {
    nebula(MavenPublication) {
      artifact shadowJar
    }
  }
}

gretty {
    contextPath = '/'
    servletContainer = 'tomcat8'
    scanDirs = ['**/src/main/resources/**']
    scanDependencies = true
    port = 8080
    // More properties can be found here:
    // http://akhikhl.github.io/gretty-doc/Gretty-configuration.html
}
configurations.grettyRunnerTomcat8 {
    exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
}


build.dependsOn('shadowJar')

task server(type: JavaExec) {
  systemProperty 'workflow.elasticsearch.url', 'localhost:9300'
  systemProperty 'loadSample', 'true'
  systemProperties System.properties
  main = 'com.netflix.conductor.server.Main'
  classpath = sourceSets.test.runtimeClasspath  
}
