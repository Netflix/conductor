/*
 *  Copyright 2021 Netflix, Inc.
 *  <p>
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 *  the License. You may obtain a copy of the License at
 *  <p>
 *  http://www.apache.org/licenses/LICENSE-2.0
 *  <p>
 *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 *  an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 *  specific language governing permissions and limitations under the License.
 */

buildscript {
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.15'
    }
}

plugins {
    id 'java'
    id 'idea'
    id "com.google.protobuf" version "0.8.15"
}

repositories{
    maven { url "https://dl.bintray.com/chaos-systems/mvn" }
}

dependencies {
    implementation project(':conductor-common')

    implementation "com.google.protobuf:protobuf-java:${revProtoBuf}"
    implementation "io.grpc:grpc-protobuf:${revGrpc}"
    implementation "io.grpc:grpc-stub:${revGrpc}"
    implementation "javax.annotation:javax.annotation-api:1.3.2"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${revProtoBuf}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${revGrpc}"
        }
    }
    generateProtoTasks {
        processResources.dependsOn extractProto
        all()*.plugins {
            grpc {}
        }
    }
}

idea {
    module {
        sourceDirs += file("${projectDir}/build/generated/source/proto/main/java");
        sourceDirs += file("${projectDir}/build/generated/source/proto/main/grpc");
    }
}

compileJava.dependsOn(tasks.getByPath(':conductor-common:protogen'))
